#Second, Transposition -> Columnar Transposition
def encrypt2(ciphertext1, keysize, key):
    result = ""
    numRows = numCols = z = o = x1 = 0
    for x in ciphertext1:
        if len(ciphertext1)%keysize==0 :
            print(ciphertext1)
            break
        else:
            ciphertext1 += 'J' #Padding

    numRows = int((len(ciphertext1))/keysize)
    numCols = keysize

    listtotranspose = [['P' for i in range(numCols)] for j in range(numRows)]
    #for x in ciphertext1:
    while z!=len(ciphertext1):
        for i in range(numRows):
            for j in range(numCols):
                listtotranspose[i][j] = ciphertext1[z]
                z+=1

    print("List to transpose :\n")
    print(listtotranspose)

    #finallist = [['P' for i in range(numCols)] for j in range(numRows)]
    finallist = np.array(listtotranspose)
    print(finallist)
    keyaslist = []
    for x in key:
        x1 = int(x)-1
        keyaslist.append(x1)
    print(keyaslist)
    keyasarray = np.array(keyaslist)
    finalenclist = finallist[:,keyasarray]
    print(finalenclist)
    finalenclist = finalenclist.tolist()
    print(finalenclist)
    for i in range(numRows):
        for j in range(numCols):
            result += finalenclist[i][j]
    print(result)
    return(result)

finalenctext = encrypt2(ciphertext1, keysize, key)
print("\n\nFinal encrypted result :\n")
print(finalenctext)
'''